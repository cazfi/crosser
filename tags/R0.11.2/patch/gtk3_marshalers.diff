diff -Nurd gtk+-3.0.1/perf/marshalers.c gtk+-3.0.1/perf/marshalers.c
--- gtk+-3.0.1/perf/marshalers.c	2011-02-22 00:05:19.000000000 +0200
+++ gtk+-3.0.1/perf/marshalers.c	2011-02-28 04:14:38.000000000 +0200
@@ -49,43 +49,6 @@
 #endif /* !G_ENABLE_DEBUG */
 
 
-/* OBJECT:VOID (./marshalers.list:1) */
-void
-_gtk_marshal_OBJECT__VOID (GClosure     *closure,
-                           GValue       *return_value G_GNUC_UNUSED,
-                           guint         n_param_values,
-                           const GValue *param_values,
-                           gpointer      invocation_hint G_GNUC_UNUSED,
-                           gpointer      marshal_data)
-{
-  typedef GObject* (*GMarshalFunc_OBJECT__VOID) (gpointer     data1,
-                                                 gpointer     data2);
-  register GMarshalFunc_OBJECT__VOID callback;
-  register GCClosure *cc = (GCClosure*) closure;
-  register gpointer data1, data2;
-  GObject* v_return;
-
-  g_return_if_fail (return_value != NULL);
-  g_return_if_fail (n_param_values == 1);
-
-  if (G_CCLOSURE_SWAP_DATA (closure))
-    {
-      data1 = closure->data;
-      data2 = g_value_peek_pointer (param_values + 0);
-    }
-  else
-    {
-      data1 = g_value_peek_pointer (param_values + 0);
-      data2 = closure->data;
-    }
-  callback = (GMarshalFunc_OBJECT__VOID) (marshal_data ? marshal_data : cc->callback);
-
-  v_return = callback (data1,
-                       data2);
-
-  g_value_take_object (return_value, v_return);
-}
-
 /* VOID:ENUM,OBJECT,DOUBLE (./marshalers.list:2) */
 void
 _gtk_marshal_VOID__ENUM_OBJECT_DOUBLE (GClosure     *closure,
