diff -Nurd glib-2.16.5/configure.in glib-2.16.5/configure.in
--- glib-2.16.5/configure.in	2008-09-02 06:20:13.000000000 +0300
+++ glib-2.16.5/configure.in	2008-09-02 06:20:27.000000000 +0300
@@ -112,6 +112,31 @@
 esac
 AC_MSG_RESULT([$glib_native_beos])
 
+case $host in
+  arm*)
+    glib_default_stack_grows="no"
+    ;;
+  i?86*|x86_64*)
+    glib_default_stack_grows="yes"
+    ;;
+  *)
+    glib_default_stack_grows="unknown"
+    ;;
+esac
+
+case $host in
+  *linux*)
+    glib_default_underscore="yes"
+    glib_default_getpwuid_r="yes"
+    glib_default_getgrgid_r="yes"
+    ;;
+  *)
+    glib_default_underscore="unknown"
+    glib_default_getpwuid_r="unknown"
+    glib_default_getgrgid_r="unknown"
+    ;;
+esac
+
 dnl
 
 AC_MSG_CHECKING([for Win32])
@@ -663,7 +688,11 @@
 	glib_cv_stack_grows=no
         ,
 	glib_cv_stack_grows=yes
-        ,)
+        ,
+[ if test x$glib_default_stack_grows = xunknown ; then
+    AC_MSG_ERROR([Don't know which way stack grow, and cannot test since cross-compiling])
+  fi
+  glib_cv_stack_grows=$glib_default_stack_grows])
 ])
 
 dnl AC_C_INLINE is useless to us since it bails out too early, we need to
@@ -1399,7 +1428,10 @@
 		}],
 			[glib_cv_uscore=yes],
 			[glib_cv_uscore=no],
-			[])
+[ if test x$glib_default_underscore = xunknown ; then
+    AC_MSG_ERROR([Don't know if preceeding underscore needed, and cannot test since cross-compiling])
+  fi
+  glib_cv_uscore=$glib_default_underscore])
 		rm -f plugin.c plugin.$ac_objext plugin.lo
 	])
         GLIB_ASSERT_SET(glib_cv_uscore)
@@ -2059,7 +2091,11 @@
 	   || error == ENOSYS; 
 }                               ],
 				[ac_cv_func_posix_getpwuid_r=yes],
-				[ac_cv_func_posix_getpwuid_r=no])])
+				[ac_cv_func_posix_getpwuid_r=no],
+[ if test x$glib_default_getpwuid_r = xunknown ; then
+    AC_MSG_ERROR([Don't know if getpwuid_r is supported, and cannot test since cross-compiling])
+  fi
+  ac_cv_func_posix_getpwuid_r=$glib_default_getpwuid_r])])
 		GLIB_ASSERT_SET(ac_cv_func_posix_getpwuid_r)
 		if test "$ac_cv_func_posix_getpwuid_r" = yes; then
 			AC_DEFINE(HAVE_POSIX_GETPWUID_R,1,
@@ -2098,7 +2134,11 @@
 	   || error == ENOSYS; 
 }                              ],
 			       [ac_cv_func_posix_getgrgid_r=yes],
-			       [ac_cv_func_posix_getgrgid_r=no])])
+			       [ac_cv_func_posix_getgrgid_r=no],
+[ if test x$glib_default_getgrgid_r = xunknown ; then
+    AC_MSG_ERROR([Don't know if getgrgid_r supported, and cannot test since cross-compiling])
+  fi
+  ac_cv_func_posix_getgrgid_r=$glib_default_getgrgid_r])])
 		GLIB_ASSERT_SET(ac_cv_func_posix_getgrgid_r)
 		if test "$ac_cv_func_posix_getgrgid_r" = yes; then
 		   	AC_DEFINE(HAVE_POSIX_GETGRGID_R,1,
