diff -Nurd libxkbcommon-1.0.1/src/compose/parser.c libxkbcommon-1.0.1/src/compose/parser.c
--- libxkbcommon-1.0.1/src/compose/parser.c	2020-09-11 15:10:23.326712800 +0300
+++ libxkbcommon-1.0.1/src/compose/parser.c	2020-09-26 08:29:36.380381714 +0300
@@ -137,7 +137,7 @@
     }
 
     /* See if we're done. */
-    if (eof(s)) return TOK_END_OF_FILE;
+    if (s_eof(s)) return TOK_END_OF_FILE;
 
     /* New token. */
     s->token_line = s->line;
@@ -146,7 +146,7 @@
 
     /* LHS Keysym. */
     if (chr(s, '<')) {
-        while (peek(s) != '>' && !eol(s) && !eof(s))
+        while (peek(s) != '>' && !eol(s) && !s_eof(s))
             buf_append(s, next(s));
         if (!chr(s, '>')) {
             scanner_err(s, "unterminated keysym literal");
@@ -171,7 +171,7 @@
 
     /* String literal. */
     if (chr(s, '\"')) {
-        while (!eof(s) && !eol(s) && peek(s) != '\"') {
+        while (!s_eof(s) && !eol(s) && peek(s) != '\"') {
             if (chr(s, '\\')) {
                 uint8_t o;
                 if (chr(s, '\\')) {
@@ -256,7 +256,7 @@
         return TOK_ERROR;
     }
 
-    while (!eof(s) && !eol(s) && peek(s) != '\"') {
+    while (!s_eof(s) && !eol(s) && peek(s) != '\"') {
         if (chr(s, '%')) {
             if (chr(s, '%')) {
                 buf_append(s, '%');
diff -Nurd libxkbcommon-1.0.1/src/scanner-utils.h libxkbcommon-1.0.1/src/scanner-utils.h
--- libxkbcommon-1.0.1/src/scanner-utils.h	2020-09-11 15:10:23.483378200 +0300
+++ libxkbcommon-1.0.1/src/scanner-utils.h	2020-09-26 08:29:13.880179465 +0300
@@ -93,7 +93,7 @@
 }
 
 static inline bool
-eof(struct scanner *s)
+s_eof(struct scanner *s)
 {
     return s->pos >= s->len;
 }
@@ -116,7 +116,7 @@
 static inline char
 next(struct scanner *s)
 {
-    if (unlikely(eof(s)))
+    if (unlikely(s_eof(s)))
         return '\0';
     if (unlikely(eol(s))) {
         s->line++;
diff -Nurd libxkbcommon-1.0.1/src/xkbcomp/rules.c libxkbcommon-1.0.1/src/xkbcomp/rules.c
--- libxkbcommon-1.0.1/src/xkbcomp/rules.c	2020-09-11 15:10:23.753375500 +0300
+++ libxkbcommon-1.0.1/src/xkbcomp/rules.c	2020-09-26 08:30:10.416687520 +0300
@@ -112,7 +112,7 @@
     }
 
     /* See if we're done. */
-    if (eof(s)) return TOK_END_OF_FILE;
+    if (s_eof(s)) return TOK_END_OF_FILE;
 
     /* New token. */
     s->token_line = s->line;
@@ -376,7 +376,7 @@
         return;
     }
 
-    while (!eof(&s) && !eol(&s)) {
+    while (!s_eof(&s) && !eol(&s)) {
         if (chr(&s, '%')) {
             if (chr(&s, '%')) {
                 buf_append(&s, '%');
diff -Nurd libxkbcommon-1.0.1/src/xkbcomp/scanner.c libxkbcommon-1.0.1/src/xkbcomp/scanner.c
--- libxkbcommon-1.0.1/src/xkbcomp/scanner.c	2020-09-11 15:10:23.756708900 +0300
+++ libxkbcommon-1.0.1/src/xkbcomp/scanner.c	2020-09-26 08:29:58.144577277 +0300
@@ -78,7 +78,7 @@
     }
 
     /* See if we're done. */
-    if (eof(s)) return END_OF_FILE;
+    if (s_eof(s)) return END_OF_FILE;
 
     /* New token. */
     s->token_line = s->line;
@@ -87,7 +87,7 @@
 
     /* String literal. */
     if (chr(s, '\"')) {
-        while (!eof(s) && !eol(s) && peek(s) != '\"') {
+        while (!s_eof(s) && !eol(s) && peek(s) != '\"') {
             if (chr(s, '\\')) {
                 uint8_t o;
                 if      (chr(s, '\\')) buf_append(s, '\\');
