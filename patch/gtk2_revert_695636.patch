diff -Nurd gtk+-2.24.21/gdk/win32/gdkdrawable-win32.c gtk+-2.24.21/gdk/win32/gdkdrawable-win32.c
--- gtk+-2.24.21/gdk/win32/gdkdrawable-win32.c	2013-07-30 07:10:53.000000000 +0300
+++ gtk+-2.24.21/gdk/win32/gdkdrawable-win32.c	2015-01-22 00:46:21.531467509 +0200
@@ -144,7 +144,6 @@
 static void gdk_drawable_impl_win32_finalize   (GObject *object);
 
 static const cairo_user_data_key_t gdk_win32_cairo_key;
-static const cairo_user_data_key_t gdk_win32_cairo_hdc_key;
 
 G_DEFINE_TYPE (GdkDrawableImplWin32,  _gdk_drawable_impl_win32, GDK_TYPE_DRAWABLE)
 
@@ -1927,33 +1926,13 @@
     }
 }
 
-static void
-gdk_win32_cairo_surface_release_hdc (void *data)
-{
-  _gdk_win32_drawable_release_dc (GDK_DRAWABLE (data));
-}
-
 cairo_surface_t *
 _gdk_windowing_create_cairo_surface (GdkDrawable *drawable,
 				     gint width,
 				     gint height)
 {
-  cairo_surface_t *surface;
-  HDC hdc;
-
-  hdc = _gdk_win32_drawable_acquire_dc (drawable);
-  if (!hdc)
-    return NULL;
-
-  surface = cairo_win32_surface_create (hdc);
-
-  /* Whenever the cairo surface is destroyed, we need to release the
-   * HDC that was acquired */
-  cairo_surface_set_user_data (surface, &gdk_win32_cairo_hdc_key,
-			       drawable,
-			       gdk_win32_cairo_surface_release_hdc);
-
-  return surface;
+  /* width and height are determined from the DC */
+  return gdk_win32_ref_cairo_surface (drawable);
 }
 
 static void
@@ -1961,6 +1940,7 @@
 {
   GdkDrawableImplWin32 *impl = data;
 
+  _gdk_win32_drawable_release_dc (GDK_DRAWABLE (impl));
   impl->cairo_surface = NULL;
 }
 
@@ -1975,14 +1955,14 @@
 
   if (!impl->cairo_surface)
     {
-      /* width and height are determined from the DC */
-      impl->cairo_surface = _gdk_windowing_create_cairo_surface (drawable, 0, 0);
+      HDC hdc = _gdk_win32_drawable_acquire_dc (drawable);
+      if (!hdc)
+	return NULL;
+
+      impl->cairo_surface = cairo_win32_surface_create (hdc);
 
-      /* Whenever the cairo surface is destroyed, we need to clear the
-       * pointer that we had stored here */
       cairo_surface_set_user_data (impl->cairo_surface, &gdk_win32_cairo_key,
-				   drawable,
-				   gdk_win32_cairo_surface_destroy);
+				   drawable, gdk_win32_cairo_surface_destroy);
     }
   else
     cairo_surface_reference (impl->cairo_surface);
@@ -2061,11 +2041,9 @@
   if (impl->cairo_surface)
     {
       cairo_surface_finish (impl->cairo_surface);
-      cairo_surface_set_user_data (impl->cairo_surface, &gdk_win32_cairo_hdc_key, NULL, NULL);
       cairo_surface_set_user_data (impl->cairo_surface, &gdk_win32_cairo_key, NULL, NULL);
     }
 
-  /* impl->hdc_count doesn't have to be 0 here; as there may still be surfaces
-   * created with gdk_windowing_create_cairo_surface() out there, which are not
-   * managed internally by the drawable */
+  g_assert (impl->hdc_count == 0);
 }
+
